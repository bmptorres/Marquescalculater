import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;

public class CalculadoraCustosDeslocacao extends Application {
    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage stage) {
        stage.setTitle("Calculadora de Custos de Deslocação");

        GridPane grid = new GridPane();
        grid.setAlignment(Pos.CENTER);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(25, 25, 25, 25));

        Label distanciaLabel = new Label("Distância (em km):");
        TextField distanciaField = new TextField();

        Label custoCombustivelLabel = new Label("Custo do Combustível (€/l):");
        TextField custoCombustivelField = new TextField();

        Label custoPortagensLabel = new Label("Custo de Portagens (€):");
        TextField custoPortagensField = new TextField();

        Label numTecnicosLabel = new Label("Número de Técnicos:");
        ChoiceBox<String> numTecnicosChoice = new ChoiceBox<>();
        numTecnicosChoice.getItems().addAll("1 Técnico", "2 Técnicos");

        Label numHorasServicoLabel = new Label("Número de Horas de Serviço no Cliente:");
        TextField numHorasServicoField = new TextField();

        Button calcularButton = new Button("Calcular");

        Label resultadoLabel = new Label("Resultado");
        Label totalCustosLabel = new Label("Total de Custos de Deslocação:");

        Label custoCombustivelCaminhaoLabel = new Label("Custo Total Combustível Camião (€):");
        Label custoDeslocacaoCamiaoLabel = new Label("Custo de Deslocação do Camião (€/km):");
        Label custoManutencaoCamiaoLabel = new Label("Custo de Manutenção do Camião (€/km):");
        Label custoMaoDeObraLabel = new Label("Custo de Mão de Obra (€):");
        Label custoMaoDeObraDeslocacaoLabel = new Label("Custo de Mão de Obra em Deslocação (€):");

        Label totalCustosResultLabel = new Label();

        GridPane.setConstraints(distanciaLabel, 0, 0);
        GridPane.setConstraints(distanciaField, 1, 0);
        GridPane.setConstraints(custoCombustivelLabel, 0, 1);
        GridPane.setConstraints(custoCombustivelField, 1, 1);
        GridPane.setConstraints(custoPortagensLabel, 0, 2);
        GridPane.setConstraints(custoPortagensField, 1, 2);
        GridPane.setConstraints(numTecnicosLabel, 0, 3);
        GridPane.setConstraints(numTecnicosChoice, 1, 3);
        GridPane.setConstraints(numHorasServicoLabel, 0, 4);
        GridPane.setConstraints(numHorasServicoField, 1, 4);
        GridPane.setConstraints(calcularButton, 1, 5);
        GridPane.setConstraints(resultadoLabel, 0, 6);
        GridPane.setConstraints(totalCustosLabel, 0, 7);
        GridPane.setConstraints(custoCombustivelCaminhaoLabel, 0, 8);
        GridPane.setConstraints(custoDeslocacaoCamiaoLabel, 0, 9);
        GridPane.setConstraints(custoManutencaoCamiaoLabel, 0, 10);
        GridPane.setConstraints(custoMaoDeObraLabel, 0, 11);
        GridPane.setConstraints(custoMaoDeObraDeslocacaoLabel, 0, 12);
        GridPane.setConstraints(totalCustosResultLabel, 1, 7);

        grid.getChildren().addAll(distanciaLabel, distanciaField, custoCombustivelLabel, custoCombustivelField,
                custoPortagensLabel, custoPortagensField, numTecnicosLabel, numTecnicosChoice, numHorasServicoLabel,
                numHorasServicoField, calcularButton, resultadoLabel, totalCustosLabel, custoCombustivelCaminhaoLabel,
                custoDeslocacaoCamiaoLabel, custoManutencaoCamiaoLabel, custoMaoDeObraLabel, custoMaoDeObraDeslocacaoLabel,
                totalCustosResultLabel);

        Scene scene = new Scene(grid, 400, 600);
        stage.setScene(scene);

        calcularButton.setOnAction(e -> calcularCustos(distanciaField, custoCombustivelField, custoPortagensField,
                numTecnicosChoice, numHorasServicoField, totalCustosResultLabel));

        stage.show();
    }

    private void calcularCustos(TextField distanciaField, TextField custoCombustivelField,
                                TextField custoPortagensField, ChoiceBox<String> numTecnicosChoice,
                                TextField numHorasServicoField, Label totalCustosResultLabel) {
        // Adicione aqui a lógica de cálculo com base nos campos de entrada
        // Exemplo:
        double distancia = Double.parseDouble(distanciaField.getText());
        double custoCombustivel = Double.parseDouble(custoCombustivelField.getText());
        double custoPortagens = Double.parseDouble(custoPortagensField.getText());
        String numTecnicos = numTecnicosChoice.getValue();
        double numHorasServico = Double.parseDouble(numHorasServicoField.getText());

        // Calcule os custos e defina o resultado em totalCustosResultLabel
        // Exemplo:
        double totalCustos = distancia * custoCombustivel + custoPortagens;
        totalCustosResultLabel.setText(String.format("%.2f €", totalCustos));
    }
}
